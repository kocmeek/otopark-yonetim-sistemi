@model otoparkyonetim.Models.AracYeni

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.cTitle = "Araç Giriş Yap";
}

@section Styles{
    @*SELECT2*@
    <link href="~/Content/select2.min.css" rel="stylesheet" />
}

@{
    var parametreler = new RouteValueDictionary();
}

<div class="d-flex justify-content-between">
    <h1 class="m-0 mb-1">Araç Giriş Yap</h1>
</div>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">@System.Configuration.ConfigurationManager.AppSettings["cCRMAdi"]</a></li>
        <li class="breadcrumb-item"><a href="/Arac/CikisYapanAracListeleYeni">Araçlar</a></li>
        <li class="breadcrumb-item active" aria-current="page">Araç Giriş Yap</li>
    </ol>
</nav>

<div class="panel">
    @using (Html.BeginForm("EkleYeni", "Arac", parametreler, FormMethod.Post, new { @id = "form" }))
    {
        <div class="row">
            <div class="form-group col-md-6 mb-0">
                @Html.LabelFor(model => model.cPlaka)
                @Html.TextBoxFor(model => model.cPlaka, new { @class = "form-control", @maxlength = "100", @placeholder = "Lütfen plaka girin ...", @autocomplete = "off", @tabindex = 1 })
                @Html.ValidationMessageFor(model => model.cPlaka, "", new { @class = "invalid-feedback" })
            </div>
            <div class="form-group col-md-6 mb-0">
                @Html.LabelFor(model => model.iKodAracTipi)
                @Html.DropDownListFor(x => x.iKodAracTipi, new SelectList(ViewBag.AracTipiListesi, "iKodAracTipi", "cAdi"), "Lütfen araç tipi seçin ...", new { @class = "form-control", @tabindex = 2 })
                @Html.ValidationMessageFor(model => model.iKodAracTipi, "", new { @class = "invalid-feedback" })
            </div>
        </div>

        <div class="form-group mt-2">
            @Html.LabelFor(model => model.cAciklama)
            @Html.TextBoxFor(model => model.cAciklama, new { @class = "form-control", @maxlength = "100", @placeholder = "Lütfen açıklama girin ...", @autocomplete = "off", @tabindex = 20 })
            @Html.ValidationMessageFor(model => model.cAciklama, "", new { @class = "invalid-feedback" })
        </div>

        <div class="form-group">
            @Html.HiddenFor(m => m.cUrun2Listesi)

            <div id="urun2Listesi">
                @if (Model != null && Model.urun2Listesi != null && Model.urun2Listesi.Count > 0)
                {
                    for (int i = 0; i < Model.urun2Listesi.Count; i++)
                    {
                        <div class="row">
                            <div class="form-group col-md-2 pr-0">
                                @Html.LabelFor(model => model.urun2Listesi[i].cKodu)
                                @Html.TextBoxFor(model => model.urun2Listesi[i].cKodu, new { @id = "cKodu-" + i.ToString(), @value = Model.urun2Listesi[i].cKodu, @class = "form-control txtUrunKodu", @maxlength = "100", @placeholder = "Lütfen ürün kodu girin ...", @autocomplete = "off", @tabindex = 3, @readonly = "readonly" })
                            </div>
                            <div class="form-group col-md-4 pr-0">
                                @Html.LabelFor(model => model.urun2Listesi[i].iKodUrun2)
                                @Html.DropDownListFor(model => model.urun2Listesi[i].iKodUrun2, new SelectList(ViewBag.Urun2Listesi, "iKodUrun2", "cAdi"), "Lütfen ürün seçin ...", new { @id = "iKodUrun-" + i.ToString(), @onchange = "Urun(this)", @class = "form-control cboUrunAdi", @tabindex = 4 })
                            </div>
                            <div class="form-group col-md-1 pr-0">
                                @Html.LabelFor(model => model.urun2Listesi[i].iAdet)
                                @Html.TextBoxFor(model => model.urun2Listesi[i].iAdet, new { @id = "iAdet-" + i.ToString(), @type = "number", @class = "form-control txtUrunAdet", @maxlength = "100", @onkeyup = "UrunYaz()", @onchange = "UrunYaz()", @placeholder = "Lütfen adet girin ...", @autocomplete = "off", @tabindex = 5 })
                            </div>
                            <div class="form-group col-md-2 pr-0">
                                @Html.LabelFor(model => model.urun2Listesi[i].cBirimFiyati)
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.urun2Listesi[i].cBirimFiyati, new { @id = "cBirimFiyati-" + i.ToString(), @class = "form-control txtUrunBirimFiyati", @maxlength = "100", @placeholder = "Lütfen birim fiyatı girin ...", @autocomplete = "off", @tabindex = 6, @readonly = "readonly" })
                                    <div class="input-group-append">
                                        <span class="input-group-text">TL</span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group col-md-2 pr-0">
                                @Html.LabelFor(model => model.urun2Listesi[i].cFiyat)
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.urun2Listesi[i].cFiyat, new { @id = "cFiyat-" + i.ToString(), @class = "form-control txtUrunFiyat", @maxlength = "100", @placeholder = "Lütfen fiyat girin ...", @autocomplete = "off", @tabindex = 7, @readonly = "readonly" })
                                    <div class="input-group-append">
                                        <span class="input-group-text">TL</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <button onclick="ProductDelete(this)" type="button" class="btn btn-secondary btn-block btn-delete" tabindex="8">Sil</button>
                            </div>
                        </div>
                    }
                }
            </div>
            @Html.ValidationMessageFor(model => model.cUrun2Listesi, "", new { @id = "cUrun2ListesiValidation", @class = "invalid-feedback" })
        </div>

        <div class="form-group">
            <button id="btnAdd" type="button" class="btn btn-secondary" tabindex="9">Ürün Ekle</button>
        </div>

        { Html.RenderPartial("/Views/Partials/FormUyariMesajlari.cshtml"); }

        <button type="submit" class="btn btn-primary mr-1" tabindex="10">Araç Girişi Yap</button>

    }
</div>

@section Scripts{
    @*PRICE FORMAT*@
    <script src="~/Scripts/jquery.priceformat.min.js"></script>
    <script src="~/MelekScripts/priceFormat.js"></script>
    <script type="text/javascript">
        $(function () {
            $('.txtUrunBirimFiyati').priceFormat(optionPriceFormat);
            $('.txtUrunFiyat').priceFormat(optionPriceFormat);
        });
    </script>
    @* SAYFA *@
    <script type="text/javascript">
        @if (ViewBag.iKodLokasyonLogin != null)
        {
            @Html.Raw("var iKodLokasyonLogin = " + @ViewBag.iKodLokasyonLogin + ";");
        }
    </script>
    <script src="~/MelekScripts/aracEkleYeni.js?date=210220202100"></script>
    @if (Model == null)
    {
        <script type="text/javascript">
            $('#iKodAracTipi').val(1);
        </script>
    }
    <script type="text/javascript">
        setInterval(function () {
            window.location.href = "/Arac/BekleyenListeleYeni"
        }, 30000);
    </script>
}
